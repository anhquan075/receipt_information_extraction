version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
    environment:
      PATH: /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/home/circleci/.local/bin
    steps:
      - checkout
      - run: python -m pip install --quiet --user -e .
      - run: python -m pip install --quiet --user 'pytest<4.0.0' pylint pyflakes bandit mypy codespell coverage pytest-profiling
      - run:
          name: pylint
          command: pylint deskew
          when: always
      - run:
          name: pyflakes
          command: python3 -m pyflakes .
          when: always
      - run:
          name: bandit
          command: bandit -r deskew
          when: always
      - run:
          name: mypy
          command: mypy --cache-dir /tmp -- deskew
          when: always
      - run:
          name: codespell
          command: codespell --check-filenames --skip=*.pyc,*.png
          when: always
      - run:
          name: pytest
          command: >
            coverage run --source=deskew --module pytest --durations=0 --verbose --color=yes
            --profile --profile-svg --junitxml=results/test-reports/junit.xml tests &&
            coverage report &&
            coverage html --directory=results/coverage
          when: always

      - store_test_results:
          path: results/test-reports

      - run:
          name: Init Git
          command: |
            git remote add push https://${GITHUB_TOKEN}@github.com/sbrunner/deskew
            git config credential.helper 'cache --timeout=120'
            git config user.email "<ci@ci.com>"
            git config user.name "CI"
      - run:
          name: Init pypi
          command: |
            echo "[pypi]" > ~/.pypirc
            echo "username = ${PYPI_USER}" >> ~/.pypirc
            echo "password = ${PYPI_PASS}" >> ~/.pypirc
            pip install --user wheel twine
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              python setup.py egg_info --no-date sdist bdist_wheel
              twine upload dist/*
            fi
      - run:
          name: Bump version
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              pip install --user bump-anything
              bump patch
              git add setup.py
              git commit --allow-empty -m "[skip ci] Bump Version"
              git push push ${CIRCLE_BRANCH}
            fi
